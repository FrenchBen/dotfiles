#!/usr/bin/env bash

# Detect which `ls` flavor is in use
unamestr=`uname`
if [[ $unamestr == 'Darwin' ]];then
    colorflag="-G"
else
    colorflag="--color=auto"
fi

alias py="ptpython"
alias pyi="ptipython"
alias nv="nvim"

alias l="ls -lf ${colorflag}"

alias la="ls -laF ${colorflag}"

alias ls="command ls ${colorflag}"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias gitlog="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias vup="vagrant destroy -f && vagrant up && vagrant ssh"
alias vdown="vagrant destroy -f"

vagrant-kill-all() {
    for i in $(vagrant global-status | grep virtualbox | awk '{ print $1 }'); do
        vagrant destroy -f "$i"
    done
}

jsonlint() {
    docker run --rm -v "$(pwd)":/v -w /v sahsu/docker-jsonlint jsonlint "$@"
}

docker-upstream-commit() {
    git log | grep -B 1 "Component: $1" | head -1 | awk '{print $2}'
}

commits-since() {
    git log --no-merges "$1"...HEAD
}

pull-jenkins-failures() {
    curl -fsSL "$1" | grep "FAIL:" | grep -v " --- " | sort -r
}

add-upstream-remote() {
    git remote add upstream "git@github.com:$1"
}

working() {
    # Drop myself into a running tmux session called working
    # TODO: Add a local setup script in order to initialize local vars

    # Note to self: -d is a good flag since it allows for aggresive resizing
    if ! tmux a -d -t working >/dev/null 2>/dev/null; then
        tmux new -s working
    fi
}
