# ╭------------------------------------------╮
# |                                          |
# | ███████╗███████╗██╗  ██╗██████╗  ██████╗ |
# | ╚══███╔╝██╔════╝██║  ██║██╔══██╗██╔════╝ |
# |   ███╔╝ ███████╗███████║██████╔╝██║      |
# |  ███╔╝  ╚════██║██╔══██║██╔══██╗██║      |
# | ███████╗███████║██║  ██║██║  ██║╚██████╗ |
# | ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ |
# ╰------------------------------------------╯
#
# UNCOMMENT TO BENCHMARK
# BENCHMARK=1 && zmodload zsh/zprof
#

source_if_exists() {
    if [[ -f $1 ]]; then
        source $1;
    fi
}

path_if_exists() {
    if [[ -d $1 ]]; then
        export PATH="$1:$PATH"
    fi
}

# Path stuff
export TERM="xterm-256color"

path_if_exists ~/.bin

path_if_exists /usr/local/bin

path_if_exists /usr/local/go/bin

path_if_exists ~/go/bin

path_if_exists ~/.local/bin

path_if_exists /usr/local/sbin/

local MAIN_EDITOR="vim"
# if [[ $(hash nvim 2>/dev/null) != 0 ]];then
#     MAIN_EDITOR="nvim"
# fi

if [[ -d /usr/share/zsh/vendor-completions ]]; then
    fpath=(/usr/share/zsh/vendor-completions $fpath)
    autoload -Uz compinit && compinit -i
fi

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR="$MAIN_EDITOR"
else
    export EDITOR="$MAIN_EDITOR"
fi

source_if_exists ~/.aliases
source_if_exists ~/.aliases-local

# ================================================================
# Plugins
# ================================================================
# load zplug if it doesn't exist
if [[ ! -d ~/.zplug ]];then
    git clone https://github.com/b4b4r07/zplug ~/.zplug
fi
source ~/.zplug/init.zsh
# Let zplug manage zplug
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
# Async for zsh, used by pure
zplug "mafredri/zsh-async", from:github, defer:0
# Load completion library for those sweet [tab] squares
zplug "lib/completion", from:oh-my-zsh
# Up -> History search! Who knew it wasn't a built in?
zplug "lib/key-bindings", from:oh-my-zsh
# History defaults
zplug "lib/history", from:oh-my-zsh
# gst, gco, gc -> All the git shortcut goodness
zplug "plugins/git", from:oh-my-zsh, if:"hash git"
# add support for kubectl and namespace prompt
zplug "plugins/kube-ps1", from:oh-my-zsh
# Add right-prompt to: repos/sindresorhus/pure/pure.zsh
# RPROMPT='%(?.%F{${prompt_pure_colors[virtualenv]}$(kube_ps1)%f'

# Prune git branches super easily
zplug "Seinh/git-prune", from:github, if:"hash git"
# Syntax highlighting for commands
zplug "zsh-users/zsh-syntax-highlighting", from:github, defer:2
# Search substring
zplug "zsh-users/zsh-history-substring-search", from:github, defer:3
# conda zshell completion
zplug "esc/conda-zsh-completion", from:github
# Syntax highlighting for commands
zplug "zdharma/fast-syntax-highlighting", from:github, defer:3
# Theme!
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
# Actually install plugins, prompt user input
if ! zplug check --verbose; then
    printf "Install zplug plugins? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi


# debug zplug loading
# zplug load --verbose
zplug load

# ================================================================
# Sourcing stuff if they're there
# ================================================================
# source fzf if it exists
source_if_exists ~/.fzf.zsh
source_if_exists ~/.cargo/env
source_if_exists /usr/share/fzf/shell/key-bindings.zsh
source_if_exists /usr/share/zsh/site-functions/fzf
source_if_exists /usr/local/opt/fzf/shell/key-bindings.zsh
source_if_exists /usr/local/opt/fzf/shell/completion.zsh
source_if_exists /usr/local/opt/fzf/site-functions/fzf

# zsh variables
SAVEHIST=1000000
HISTSIZE=100000
HISTFILESIZE=$HISTSIZE
# Make some commands not show up in history.
#HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help:ll:"

# zsh-history-substring-search
if zplug check "zsh-users/zsh-history-substring-search"; then
  zmodload zsh/terminfo
  [ -n "${terminfo[kcuu1]}" ] && bindkey "${terminfo[kcuu1]}" history-substring-search-up
  [ -n "${terminfo[kcud1]}" ] && bindkey "${terminfo[kcud1]}" history-substring-search-down
fi

setopt    incappendhistory  #Immediately append to the history file, not just when a term is killed

# Source pyenv init if it exists
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
if which pyenv > /dev/null 2>&1; then eval "$(pyenv init -)"; fi

export WORKON_HOME="$HOME/venvs"
export PROJECT_HOME="$HOME/projects"

# I can have comments at the end of my commands too :D
setopt interactivecomments

source_if_exists ~/.zshexport

# Enable right-prompt for Kube context
RPROMPT='%(?.%F{${prompt_pure_colors[virtualenv]}$(kube_ps1)%f'

# Default Golang PATH
export GOPATH=$HOME/go
source_if_exists ~/.aliases-go

# Hey this is so dumb that I have to add this
export DISABLE_WARN_OUTSIDE_CONTAINER=1
export GPG_TTY="$(/usr/bin/tty)"

# Source local zshrc if it exists
source_if_exists ~/.zshrc.local

if [[ -n "$BENCHMARK" ]];then
    zprof > "$HOME/.zsh_benchmark"
fi
