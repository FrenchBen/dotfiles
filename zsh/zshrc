# UNCOMMENT TO BENCHMARK
# BENCHMARK=1 && zmodload zsh/zprof
#

source_if_exists() {
    if [[ -f $1 ]]; then
        source $1;
    fi
}

path_if_exists() {
    if [[ -d $1 ]]; then
        export PATH="$1:$PATH"
    fi
}

# Path stuff
export TERM="xterm-256color"

source_if_exists ~/.cargo/env

path_if_exists ~/.bin

path_if_exists /usr/local/go/bin

path_if_exists ~/go/bin

path_if_exists ~/.local/bin

local MAIN_EDITOR="vim"
if [[ $(hash nvim 2>/dev/null) != 0 ]];then
    MAIN_EDITOR="nvim"
fi

if [[ -d /usr/share/zsh/vendor-completions ]]; then
    fpath=(/usr/share/zsh/vendor-completions $fpath)
    autoload -Uz compinit && compinit -i
fi

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR="$MAIN_EDITOR"
else
    export EDITOR="$MAIN_EDITOR"
fi

source_if_exists ~/.aliases
source_if_exists ~/.aliases-local

# ================================================================
# Plugins
# ================================================================
# load zplug if it doesn't exist
if [[ ! -d ~/.zplug ]];then
    git clone https://github.com/b4b4r07/zplug ~/.zplug
fi
source ~/.zplug/init.zsh
# Let zplug manage zplug
zplug 'zplug/zplug', hook-build:'zplug --self-manage'
# Async for zsh, used by pure
zplug "mafredri/zsh-async", from:github, defer:0
# Load completion library for those sweet [tab] squares
zplug "lib/completion", from:oh-my-zsh
# Up -> History search! Who knew it wasn't a built in?
zplug "lib/key-bindings", from:oh-my-zsh
# History defaults
zplug "lib/history", from:oh-my-zsh
# Adds useful aliases for things dealing with directories
zplug "lib/directories", from:oh-my-zsh
# gst, gco, gc -> All the git shortcut goodness
zplug "plugins/git", from:oh-my-zsh, if:"hash git"
# Prune git branches super easily
zplug "Seinh/git-prune", from:github, if:"hash git"
# Syntax highlighting for commands
zplug "zsh-users/zsh-syntax-highlighting", from:github, defer:3
# Theme!
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
# Actually install plugins, prompt user input
if ! zplug check --verbose; then
    printf "Install zplug plugins? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

# ================================================================
# Sourcing stuff if they're there
# ================================================================
# source fzf if it exists
source_if_exists ~/.fzf.zsh
source_if_exists /usr/share/fzf/shell/key-bindings.zsh
source_if_exists /usr/share/zsh/site-functions/fzf


# Source pyenv init if it exists
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
if which pyenv > /dev/null 2>&1; then eval "$(pyenv init -)"; fi

if [[ -n "$BENCHMARK" ]];then
    zprof > "$HOME/.zsh_benchmark"
fi

# added by travis gem
source_if_exists ~/.travis/travis.sh

export WORKON_HOME="$HOME/venvs"
export PROJECT_HOME="$HOME/projects"
source_if_exists /usr/local/bin/virtualenvwrapper.sh

# I can have comments at the end of my commands too :D
setopt interactivecomments

# Hey this is so dumb that I have to add this
export DISABLE_WARN_OUTSIDE_CONTAINER=1

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# GPG agent
GPG_AGENT_FILE="$HOME/.gpg-agent-info"
function start_gpg_agent {
  gpg-agent --daemon --write-env-file "$GPG_AGENT_FILE"
}
if which gpg-agent > /dev/null; then
  # start agent if there's no agent file
  if [ ! -f "$GPG_AGENT_FILE" ]; then
    eval "$( start_gpg_agent )"
  else
    # check agent works
    source "$GPG_AGENT_FILE"
    SOCKET=$(echo "${GPG_AGENT_INFO}"  | cut -d : -f 1)
    # check agent connection
    if ( ! nc -U "$SOCKET" < /dev/null | grep -q "OK Pleased to meet you" ); then
      eval $( start_gpg_agent )
    fi
  fi
  export GPG_TTY="$(tty)"
fi
